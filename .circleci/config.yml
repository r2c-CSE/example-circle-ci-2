version: 2.1
workflows:
  semgrep:
    jobs:
      - semgrep-scan:
          context:
            - semgrep
jobs:
  semgrep-scan:
    docker:
      - image: semgrep/semgrep
    environment:
    # Setting the branch name as an environment variable
      BRANCH_NAME: << pipeline.git.branch >>
    steps:
      - checkout
      - run:
          name: Mask Branch Name
          command: |
            echo "Setting branch name..."
            echo "export BRANCH_NAME=${BRANCH_NAME}" >> $BASH_ENV
      - run:
          name: "Semgrep scan"
          command: |
              echo "Running Semgrep scan for circle_branch: $CIRCLE_BRANCH"
              echo "Running Semgrep scan for branch_name: $BRANCH_NAME"
              export SEMGREP_APP_TOKEN=$SEMGREP_APP_TOKEN
              export SEMGREP_COMMIT=$CIRCLE_SHA1
              export SEMGREP_JOB_URL=$CIRCLE_BUILD_URL
              PR_NUMBER=$(echo "$CIRCLE_PULL_REQUEST" | awk -F '/' '{print $NF}' )
              echo "CIRCLE_PULL_REQUEST: $CIRCLE_PULL_REQUEST"
              echo "Pull Request Number: $PR_NUMBER"
              if [ -n "$PR_NUMBER" ]; then
                  echo "Running pull request scan for branch: $CIRCLE_BRANCH"
                  export SEMGREP_BASELINE_REF="origin/development"
                  echo "Pull Request Number: $PR_NUMBER"
                  export SEMGREP_PR_ID=$PR_NUMBER
                  git fetch origin "+refs/heads/*:refs/remotes/origin/*"
                  semgrep ci --baseline-commit=$(git merge-base development HEAD)
              else
                  if [ "$CIRCLE_BRANCH" == "development" ]; then
                      echo "Running Full scan for branch: $CIRCLE_BRANCH"
                      semgrep ci || true
                  else
                      echo "Skipping full scan for branches different to development"
                  fi
              fi

